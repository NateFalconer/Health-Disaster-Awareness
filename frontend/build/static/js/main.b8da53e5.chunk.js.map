{"version":3,"sources":["services/index.js","components/home/Home.js","components/404/NotFound.js","components/auth/SignUp.js","components/auth/LogIn.js","components/profile/Profile.js","components/Post_Article/PostArticle.js","components/article/ArticleDetails.js","components/main/Main.js","components/user_feed/User_Feed.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","service","axios","create","withCredentials","actions","isLoggedIn","a","get","signUp","user","post","logIn","logOut","shareArticle","postArticle","article","likeArticle","findLikedArticles","Home","Component","NotFound","SignUp","state","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","then","console","log","props","setUser","data","history","push","catch","response","error","onSubmit","this","type","onChange","LogIn","Profile","email","location","PostArticle","resback","handleSubmitLike","ArticleDetails","findDetails","match","params","detail","newsEvents","theArticle","articles","find","eachArticle","title","includes","showArticles","className","author","publishedAt","src","urlToImage","alt","description","rel","href","url","ready","Main","map","index","key","onClick","to","User_Feed","showLikedArticles","headers","App","createdAt","updatedAt","_id","userName","exact","path","render","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"yKACIA,E,4IAICA,EAAU,0CAGf,IAAMC,EAAUC,IAAMC,OAAO,CAAEC,iBAAiB,EAAMJ,YAgDvCK,EA9CC,CACdC,WAAW,WAAD,4BAAE,sBAAAC,EAAA,sEACGN,EAAQO,IAAI,iBADf,mFAAF,kDAAC,GAGXC,OAAO,WAAD,4BAAE,WAAMC,GAAN,SAAAH,EAAA,sEACON,EAAQU,KAAK,UAAWD,GAD/B,mFAAF,mDAAC,GAGPE,MAAM,WAAD,4BAAE,WAAMF,GAAN,SAAAH,EAAA,sEACQN,EAAQU,KAAK,SAAUD,GAD/B,mFAAF,mDAAC,GAGNG,OAAO,WAAD,4BAAE,sBAAAN,EAAA,sEACON,EAAQO,IAAI,WADnB,mFAAF,kDAAC,GAGPM,aAAa,WAAD,4BAAE,sBAAAP,EAAA,sEACCN,EAAQU,KAAK,cADd,mFAAF,kDAAC,GAGbI,YAAY,WAAD,4BAAE,WAAMC,GAAN,SAAAT,EAAA,sEACEN,EAAQU,KAAK,eAAgBK,GAD/B,mFAAF,mDAAC,GAGZC,YAAY,WAAD,4BAAE,WAAMD,GAAN,SAAAT,EAAA,sEACEN,EAAQU,KAAK,eAAgBK,GAD/B,mFAAF,mDAAC,GAGZE,kBAAkB,WAAD,4BAAE,sBAAAX,EAAA,sEACJN,EAAQO,IAAI,sBADR,mFAAF,kDAAC,IClBLW,E,+ZAJX,OAAO,kC,GALQC,aCKJC,I,QCgDAC,E,2MAtDbC,MAAQ,G,EACRC,aAAe,SAAAC,GAAC,OAAI,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAE9DN,MAAQ,G,EACRC,aAAe,SAAAC,GAAC,OAAI,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAE9DC,aAAe,SAAAL,GACbA,EAAEM,iBACF1B,EACGI,OAAO,EAAKc,OACZS,MAAK,SAAAtB,GACJuB,QAAQC,IAAIxB,GACZ,EAAKyB,MAAMC,QAAX,eAAwB1B,EAAK2B,OAC7B,EAAKF,MAAMG,QAAQC,KAAK,YAEzBC,OAAM,gBAAGC,EAAH,EAAGA,SAAH,OAAkBR,QAAQS,MAAMD,EAASJ,U,wEAGlD,OACE,kBAAC,WAAD,KACE,sCACA,0BAAMM,SAAUC,KAAKd,cACrB,6BACI,uCACA,2BAAOF,KAAK,WAAWiB,KAAK,OAAOC,SAAUF,KAAKpB,gBAEpD,6BACE,oCACA,2BAAOI,KAAK,QAAQiB,KAAK,OAAOC,SAAUF,KAAKpB,gBAEjD,6BACE,uCACA,2BACEI,KAAK,WACLiB,KAAK,WACLC,SAAUF,KAAKpB,gBAWnB,6BACA,2BAAOqB,KAAK,SAAShB,MAAM,kB,GAhDhBT,aCiDN2B,E,2MAhDbxB,MAAQ,G,EACRC,aAAe,SAAAC,GAAC,OAAI,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAE9DC,aAAe,SAAAL,GACbA,EAAEM,iBACF1B,EACGO,MAAM,EAAKW,OACXS,MAAK,SAAAtB,GACJuB,QAAQC,IAAIxB,GACZ,EAAKyB,MAAMC,QAAX,eAAwB1B,EAAK2B,OAC7B,EAAKF,MAAMG,QAAQC,KAAK,YAEzBC,OAAM,gBAAGC,EAAH,EAAGA,SAAH,OAAkBR,QAAQS,MAAMD,EAASJ,U,wEAIlD,OACE,kBAAC,WAAD,KACE,qCACA,0BAAMM,SAAUC,KAAKd,cACnB,6BACE,oCACA,2BAAOF,KAAK,QAAQiB,KAAK,QAAQC,SAAUF,KAAKpB,gBAElD,6BACE,uCACA,2BACEI,KAAK,WACLiB,KAAK,WACLC,SAAUF,KAAKpB,gBAWnB,6BACA,2BAAOqB,KAAK,SAAShB,MAAM,gB,GA1CjBT,aCaL4B,EAdC,SAAAb,GAId,OAHKA,EAAMzB,KAAKuC,OACdd,EAAMG,QAAQC,KAAK,WAGnB,6BACE,6BACA,uCACA,2BAAIJ,EAAMzB,KAAKuC,OACf,2BAAId,EAAMzB,KAAKwC,YCsBNC,E,2MA7Bb5B,MAAQ,G,EACRC,aAAe,SAAAC,GAAC,OAAI,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAE9DC,aAAe,SAAAL,GACbA,EAAEM,iBACF1B,EACGU,YAAY,EAAKQ,OACjBS,MAAK,SAAAoB,GACJnB,QAAQC,IAAIkB,MAEbZ,OAAM,gBAAGC,EAAH,EAAGA,SAAH,OAAkBR,QAAQS,MAAMD,O,wEAGzC,OACE,kBAAC,WAAD,KACE,0BAAME,SAAUC,KAAKT,MAAMkB,kBACzB,2BAAOR,KAAK,SAAShB,MAAM,UAE7B,kDACA,0BAAMc,SAAUC,KAAKT,MAAML,cAGzB,2BAAOe,KAAK,SAAShB,MAAM,gB,GAvBXT,aCiFXkC,E,2MA9EbC,YAAc,WACZtB,QAAQC,IACN,wBACA,EAAKC,MAAMqB,MAAMC,OAAOC,OACxB,EAAKvB,MAAMwB,YAEb,IAAIC,EAAa,EAAKzB,MAAMwB,WAAWE,SAASC,MAAK,SAAAC,GACnD,OAAOA,EAAYC,MAAMC,SAAU,EAAK9B,MAAMqB,MAAMC,OAAOC,WAI7D,OAFAzB,QAAQC,IAAI0B,GAELA,G,EAGP9B,aAAe,SAAAL,GACfA,EAAEM,iBACF,IAAI6B,EAAa,EAAKL,cACtBlD,EACGU,YAAY6C,GACZ5B,MAAK,SAAAoB,GACJnB,QAAQC,IAAIkB,MAEbZ,OAAM,gBAAGC,EAAH,EAAGA,SAAH,OAAkBR,QAAQS,MAAMD,O,EAG3CY,iBAAmB,SAAA5B,GACjBA,EAAEM,iBACF,IAAI6B,EAAa,EAAKL,cACtBlD,EACGY,YAAY2C,GACZ5B,MAAK,SAAAoB,GACJnB,QAAQC,IAAIkB,MAEbZ,OAAM,gBAAGC,EAAH,EAAGA,SAAH,OAAkBR,QAAQS,MAAMD,O,EAG3CyB,aAAe,WACb,IAAIN,EAAa,EAAKL,cAEtB,OADAtB,QAAQC,IAAI0B,GAEV,6BACGA,GAAc,kBAAC,WAAD,KACf,yBAAKO,UAAU,WACb,2BAAIP,EAAWQ,QAEf,2BAAIR,EAAWS,cAEjB,yBAAKF,UAAU,YACb,yBAAKG,IAAKV,EAAWW,WAAYC,IAAI,KACrC,4BAAKZ,EAAWI,QAElB,yBAAKG,UAAU,gBACb,4BAAKP,EAAWa,cAElB,yBAAKN,UAAU,iBACb,uBAAGO,IAAI,sBAAsB/C,OAAO,SAASgD,KAAMf,EAAWgB,KAC5D,4CAIJ,gC,wEASJ,OADA3C,QAAQC,IAAIU,KAAKT,MAAMwB,YAErB,6BACGf,KAAKT,MAAM0C,MAAQjC,KAAKsB,eAAiB,IAC1C,kBAAC,EAAD,CAAapC,aAAcc,KAAKd,aAAcuB,iBAAkBT,KAAKS,wB,GA1EhDjC,aCuDd0D,E,2MA9BbZ,aAAe,WACX,OAAO,EAAK/B,MAAMwB,WAAWE,SAASkB,KAAI,SAAChB,EAAaiB,GACpD,OACI,yBAAKC,IAAKD,GACZ,yBAAKb,UAAU,YACf,yBAAKG,IAAKP,EAAYQ,WAAYC,IAAI,KACtC,kBAAC,IAAD,CAAMU,QAAQ,GAAGD,IAAKlB,EAAYC,MAAOmB,GAAE,2BAAsBpB,EAAYC,QAAS,4BAAKD,EAAYC,c,wEAU/G,OADE/B,QAAQC,IAAIU,KAAKT,MAAMwB,YAErB,6BACU,yBAAKQ,UAAU,iBACrB,oDAEF,yBAAKA,UAAU,gBACb,mDAEPvB,KAAKT,MAAM0C,MAAQjC,KAAKsB,eAAiB,S,GAhD3B9C,aCwBJgE,E,2MAzBf7D,MAAQ,CACJsC,SAAU,I,EAQVwB,kBAAoB,WAChB,OAAO,EAAK9D,MAAMsC,SAASkB,KAAI,SAAAhB,GAC3B,OAAO,4BAAKA,EAAYC,W,mFARX,IAAD,OAChB3D,EAAQa,oBAAoBc,MAAK,SAAA6B,GAC7B5B,QAAQC,IAAI2B,GACZ,EAAKnC,SAAS,CAACmC,SAAUA,EAASxB,Y,+BAStC,OACI,6BACI,yBAAK8B,UAAU,gBAAe,oDAC7BvB,KAAKyC,oBACN,yBAAKlB,UAAU,cAAa,sD,GApBpB/C,aCapBkE,EAAU,CACZ,YAAa,oCAsHAC,E,2MAlHbhE,MAAQ,CACNoC,WAAY,GACZkB,OAAO,G,EAeTzC,QAAU,SAAA1B,GAAI,OAAI,EAAKgB,SAAShB,I,EAEhCG,O,sBAAS,sBAAAN,EAAA,sEACSF,EAAQQ,SADjB,cAEP,EAAKuB,QAAQ,CAAEa,MAAO,KAAMuC,UAAW,KAAMC,UAAW,KAAMC,IAAK,KAAMC,SAAU,OAF5E,2C,qNAbUtF,EAAQC,a,cAArBI,E,OACJkC,KAAKlB,SAAL,eAAmBhB,EAAK2B,O,SACDnC,IAAMM,IAf1B,yGAemC8E,G,OAAlC3B,E,OACJ1B,QAAQC,IAAIyB,EAAWtB,MAEvBO,KAAKlB,SAAS,CACZiC,WAAYA,EAAWtB,KACvBwC,OAAO,I,qIAWD,IAAD,OACP,OACE,kBAAC,IAAD,KACGjC,KAAKrB,MAAMoE,SACZ,6BAGG/C,KAAKrB,MAAM0B,MACV,kBAAC,WAAD,KACE,kBAAC,IAAD,CAASkC,GAAG,SAAZ,UACA,kBAAC,IAAD,CAASD,QAAStC,KAAK/B,OAAQsE,GAAG,KAAlC,aAGA,kBAAC,IAAD,CAASA,GAAG,YAAZ,YACA,kBAAC,IAAD,CAASA,GAAG,cAAZ,gBAGF,kBAAC,WAAD,KACE,kBAAC,IAAD,CAASA,GAAG,YAAZ,aACA,kBAAC,IAAD,CAASA,GAAG,WAAZ,cAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAA3D,GAAK,OAAI,kBAAC,EAASA,MACjD,kBAAC,IAAD,CACEyD,OAAK,EACLC,KAAK,WACLC,OAAQ,SAAA3D,GAAK,OAAI,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBC,QAAS,EAAKA,cAEpD,kBAAC,IAAD,CACEwD,OAAK,EACLC,KAAK,UACLC,OAAQ,SAAA3D,GAAK,OAAI,kBAAC,EAAD,iBAAWA,EAAX,CAAkBC,QAAS,EAAKA,cAEnD,kBAAC,IAAD,CACEwD,OAAK,EACLC,KAAK,WACLC,OAAQ,SAAA3D,GAAK,OAAI,kBAAC,EAAD,iBAAaA,EAAb,CAAoBzB,KAAM,EAAKa,YAElD,kBAAC,IAAD,CACEqE,OAAK,EACLC,KAAK,QACLC,OAAQ,SAAA3D,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEwB,WAAY,EAAKpC,MAAMoC,WACvBkB,MAAO,EAAKtD,MAAMsD,YAIxB,kBAAC,IAAD,CACEe,OAAK,EACLC,KAAK,2BACLC,OAAQ,SAAA3D,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEwB,WAAY,EAAKpC,MAAMoC,WACvBkB,MAAO,EAAKtD,MAAMsD,YAIxB,kBAAC,IAAD,CACEe,OAAK,EACLC,KAAK,gBACLC,OAAQ,SAAA3D,GAAK,OACX,iDACMA,EADN,CAEEwB,WAAY,EAAKpC,MAAMoC,WACvBkB,MAAO,EAAKtD,MAAMsD,YAIxB,kBAAC,IAAD,CACEe,OAAK,EACLC,KAAK,aACLC,OAAQ,SAAA3D,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEzB,KAAM,EAAKa,MACXoC,WAAY,EAAKpC,MAAMoC,WACvBkB,MAAO,EAAKtD,MAAMsD,kB,GA1GhBzD,aCRE2E,QACW,cAA7BC,OAAO9C,SAAS+C,UAEe,UAA7BD,OAAO9C,SAAS+C,UAEhBD,OAAO9C,SAAS+C,SAASzC,MACvB,2DCZN0C,IAASJ,OAAO,kBAAC,EAAD,MAASK,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAczB,MAAM7C,MAAK,SAAAuE,GACjCA,EAAaC,kB","file":"static/js/main.b8da53e5.chunk.js","sourcesContent":["import axios from \"axios\";\r\nlet baseURL;\r\n\r\nprocess.env.NODE_ENV === \"production\"\r\n  ? //? (baseURL = 'here should be your production endpoint')\r\n    (baseURL = \"https://outbreakprojectih.herokuapp.com\")\r\n  : (baseURL = \"http://localhost:5000\");\r\n\r\nconst service = axios.create({ withCredentials: true, baseURL });\r\n\r\nconst actions = {\r\n  isLoggedIn: async () => {\r\n    return await service.get(\"/is-logged-in\");\r\n  },\r\n  signUp: async user => {\r\n    return await service.post(\"/signup\", user);\r\n  },\r\n  logIn: async user => {\r\n    return await service.post(\"/login\", user);\r\n  },\r\n  logOut: async () => {\r\n    return await service.get(\"/logout\");\r\n  },\r\n  shareArticle: async () => {\r\n    return await service.post(\"/user-feed\");\r\n  },\r\n  postArticle: async article => {\r\n    return await service.post(\"/postArticle\", article);\r\n  },\r\n  likeArticle: async article => {\r\n    return await service.post(\"/likeArticle\", article)\r\n  },\r\n  findLikedArticles: async () => {\r\n    return await service.get(\"/findLikedArticles\")\r\n  }\r\n\r\n\r\n  // handleUpload (theFile) { //the one that saves to cloudinary\r\n  //   console.log('file in service: ', theFile)\r\n  //   return service.post('/upload-image', theFile)\r\n  //     .then(res => res.data)\r\n  //     .catch(errorHandler);\r\n  // },\r\n\r\n  // saveNewThing (newThing) { // The one that saves to your database\r\n  //   console.log('new thing is: ', newThing)\r\n  //   return service.post('/things/create', newThing)\r\n  //     .then(res => res.data)\r\n  //     .catch(errorHandler);\r\n  // },\r\n\r\n  // getAllImages: async () => {\r\n  //   return await service.get\r\n  // }\r\n};\r\n\r\nexport default actions;\r\n","import React, { Component } from \"react\";\r\nimport actions from \"../../services/index\";\r\n// import './App.css';\r\n// import axios from 'axios';\r\n\r\nclass Home extends Component {\r\n  async componentDidMount() {\r\n    //actions.test()\r\n  }\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <h2>Not found</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport actions from \"../../services/index\";\r\n\r\nclass SignUp extends Component {\r\n  state = {};\r\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  state = {};\r\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    actions\r\n      .signUp(this.state)\r\n      .then(user => {\r\n        console.log(user);\r\n        this.props.setUser({ ...user.data });\r\n        this.props.history.push(\"/home\");\r\n      })\r\n      .catch(({ response }) => console.error(response.data));\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h2>SignUP</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n        <div>\r\n            <p>Username</p>\r\n            <input name=\"userName\" type=\"text\" onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <p>Email</p>\r\n            <input name=\"email\" type=\"text\" onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <p>Password</p>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          {/* <div>\r\n            <p>Location</p>\r\n            <input\r\n              name=\"location\"\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div> */}\r\n          <br></br>\r\n          <input type=\"submit\" value=\"Sign Up\" />\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport actions from \"../../services/index\";\r\n\r\nclass LogIn extends Component {\r\n  state = {};\r\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    actions\r\n      .logIn(this.state)\r\n      .then(user => {\r\n        console.log(user)\r\n        this.props.setUser({ ...user.data });\r\n        this.props.history.push(\"/home\");\r\n      })\r\n      .catch(({ response }) => console.error(response.data));\r\n  };\r\n  render() {\r\n    //console.log(this.props)\r\n    return (\r\n      <Fragment>\r\n        <h2>LogIn</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <p>Email</p>\r\n            <input name=\"email\" type=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <p>Password</p>\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          {/* <div>\r\n            <p>Location</p>\r\n            <input\r\n              name=\"location\"\r\n              type=\"location\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </div> */}\r\n          <br></br>\r\n          <input type=\"submit\" value=\"Login\" />\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Profile = props => {\r\n  if (!props.user.email) {\r\n    props.history.push(\"/log-in\");\r\n  }\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h3>Profile</h3>\r\n      <p>{props.user.email}</p>\r\n      <p>{props.user.location}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport actions from \"../../services/index\";\r\n\r\nclass PostArticle extends Component {\r\n  state = {};\r\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    actions\r\n      .postArticle(this.state) // {title: userInput}\r\n      .then(resback => {\r\n        console.log(resback);\r\n      })\r\n      .catch(({ response }) => console.error(response));\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={this.props.handleSubmitLike}>\r\n          <input type=\"submit\" value=\"Like\" />\r\n        </form>\r\n        <h2>Share this article</h2>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n\r\n          {/* <input name=\"comment\" placeholder=\"Comment\" type=\"text\" onChange={this.handleChange} /> */}\r\n          <input type=\"submit\" value=\"Share\" />\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostArticle;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PostArticle from \"../Post_Article/PostArticle\";\r\nimport actions from \"../../services/index\"\r\n\r\nclass ArticleDetails extends Component {\r\n\r\n  findDetails = () => {\r\n    console.log(\r\n      \"article detail title:\",\r\n      this.props.match.params.detail,\r\n      this.props.newsEvents\r\n    );\r\n    let theArticle = this.props.newsEvents.articles.find(eachArticle => {\r\n      return eachArticle.title.includes (this.props.match.params.detail);\r\n    });\r\n    console.log(theArticle);\r\n\r\n    return theArticle;\r\n  };\r\n\r\n    handleSubmit = e => {\r\n    e.preventDefault();\r\n    let theArticle = this.findDetails();\r\n    actions\r\n      .postArticle(theArticle) // {title: userInput}\r\n      .then(resback => {\r\n        console.log(resback);\r\n      })\r\n      .catch(({ response }) => console.error(response));\r\n  };\r\n\r\n  handleSubmitLike = e => {\r\n    e.preventDefault();\r\n    let theArticle = this.findDetails();\r\n    actions\r\n      .likeArticle(theArticle) // {title: userInput}\r\n      .then(resback => {\r\n        console.log(resback);\r\n      })\r\n      .catch(({ response }) => console.error(response));\r\n  }\r\n\r\n  showArticles = () => {\r\n    let theArticle = this.findDetails();\r\n    console.log(theArticle)\r\n    return (\r\n      <div>\r\n        {theArticle && <Fragment>\r\n        <div className=\"publish\">\r\n          <p>{theArticle.author}</p>\r\n\r\n          <p>{theArticle.publishedAt}</p>\r\n        </div>\r\n        <div className=\"newsFeed\">\r\n          <img src={theArticle.urlToImage} alt=\"\" />\r\n          <h1>{theArticle.title}</h1>\r\n        </div>\r\n        <div className=\"topHeadlines\">\r\n          <h1>{theArticle.description}</h1>\r\n        </div>\r\n        <div className=\"coronaTracker\">\r\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href={theArticle.url}>\r\n            <h1>Read more</h1>\r\n          </a>\r\n        </div>\r\n        </Fragment>}\r\n        <div>\r\n          {/* <button onClick=\"\">Like</button>\r\n          <button onClick=\"\">Share</button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    console.log(this.props.newsEvents);\r\n    return (\r\n      <div>\r\n        {this.props.ready ? this.showArticles() : \" \"}\r\n        <PostArticle handleSubmit={this.handleSubmit} handleSubmitLike={this.handleSubmitLike}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArticleDetails;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport ArticleDetails from \"../article/ArticleDetails\";\r\n// import axios from \"axios\";\r\n\r\nclass Main extends Component {\r\n  //   constructor(props) {\r\n  //     super(props);\r\n  //     this.state = { title: \"\", description: \"\" };\r\n  //   }\r\n\r\n  //   handleFormSubmit = event => {\r\n  //     event.preventDefault();\r\n  //     const title = this.state.title;\r\n  //     const description = this.state.description;\r\n  //     axios\r\n  //       .post(\"http://localhost:5000/api/projects\", { title, description })\r\n  //       .then(() => {\r\n  //         // this.props.getData();\r\n  //         this.setState({ title: \"\", description: \"\" });\r\n  //       })\r\n  //       .catch(error => console.log(error));\r\n  //   };\r\n\r\n  //   handleChange = event => {\r\n  //     const { name, value } = event.target;\r\n  //     this.setState({ [name]: value });\r\n  //   };\r\n\r\n  showArticles = () => {\r\n      return this.props.newsEvents.articles.map((eachArticle, index) => {\r\n          return (\r\n              <div key={index}>\r\n            <div className=\"newsFeed\">\r\n            <img src={eachArticle.urlToImage} alt=''/>\r\n            <Link onClick='' key={eachArticle.title} to={`/article-details/${eachArticle.title}`}><h1>{eachArticle.title}</h1></Link>\r\n          </div>\r\n\r\n            </div>\r\n          )\r\n      })\r\n  }\r\n\r\n  render() {\r\n      console.log(this.props.newsEvents)\r\n    return (\r\n        <div>\r\n                  <div className=\"coronaTracker\">\r\n            <h1>Corona Tracker here</h1>\r\n          </div>\r\n          <div className=\"topHeadlines\">\r\n            <h1>Top Headlines here</h1>\r\n            </div>\r\n    {this.props.ready ? this.showArticles() : \" \"}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport actions from \"../../services/index\";\r\n\r\nclass User_Feed extends Component {\r\nstate = {\r\n    articles: []\r\n}\r\n    componentDidMount() {\r\n        actions.findLikedArticles().then(articles => {\r\n            console.log(articles)\r\n            this.setState({articles: articles.data})\r\n        })\r\n    }\r\n    showLikedArticles = () => {\r\n        return this.state.articles.map(eachArticle => {\r\n            return <li>{eachArticle.title}</li>\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"favoriteFeed\"><h1>Favorite tiles here</h1></div>\r\n                {this.showLikedArticles()}\r\n                <div className=\"sharedFeed\"><h1>Shared feed here</h1></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default User_Feed;","import React, { Component, Fragment } from \"react\";\r\nimport { BrowserRouter, Switch, Route, NavLink } from \"react-router-dom\";\r\nimport Home from \"./components/home/Home\";\r\nimport NotFound from \"./components/404/NotFound.js\";\r\nimport SignUp from \"./components/auth/SignUp\";\r\nimport LogIn from \"./components/auth/LogIn\";\r\nimport Profile from \"./components/profile/Profile\";\r\nimport actions from \"./services/index\";\r\nimport axios from \"axios\";\r\nimport Main from \"./components/main/Main\";\r\nimport PostArticle from \"./components/Post_Article/PostArticle\";\r\nimport ArticleDetails from \"./components/article/ArticleDetails\";\r\nimport User_Feed from \"./components/user_feed/User_Feed\";\r\n\r\nvar url = `http://newsapi.org/v2/top-headlines?country=us&category=health&apiKey=3d317330f7724477a808676552aeec15`;\r\n\r\nvar headers = {\r\n  \"X-Api-Key\": \"3d317330f7724477a808676552aeec15\"\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    newsEvents: [],\r\n    ready: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let user = await actions.isLoggedIn();\r\n    this.setState({ ...user.data });\r\n    let newsEvents = await axios.get(url, headers);\r\n    console.log(newsEvents.data);\r\n\r\n    this.setState({\r\n      newsEvents: newsEvents.data,\r\n      ready: true\r\n    });\r\n  }\r\n\r\n  setUser = user => this.setState(user);\r\n\r\n  logOut = async () => {\r\n    let res = await actions.logOut();\r\n    this.setUser({ email: null, createdAt: null, updatedAt: null, _id: null, userName: null }); //FIX\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        {this.state.userName}\r\n        <nav>\r\n          {/* <NavLink to=\"/upload-image\">Upload Image</NavLink> */}\r\n\r\n          {this.state.email ? (\r\n            <Fragment>\r\n              <NavLink to=\"/home\">Home |</NavLink>\r\n              <NavLink onClick={this.logOut} to=\"/\">\r\n                Log Out |\r\n              </NavLink>\r\n              <NavLink to=\"/profile\">Profile|</NavLink>\r\n              <NavLink to=\"/User_Feed\">User Feed |</NavLink>\r\n            </Fragment>\r\n          ) : (\r\n            <Fragment>\r\n              <NavLink to=\"/sign-up\">Sign Up |</NavLink>\r\n              <NavLink to=\"/log-in\">Log In |</NavLink>\r\n            </Fragment>\r\n          )}\r\n        </nav>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={props => <Home {...props} />} />\r\n          <Route\r\n            exact\r\n            path=\"/sign-up\"\r\n            render={props => <SignUp {...props} setUser={this.setUser} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/log-in\"\r\n            render={props => <LogIn {...props} setUser={this.setUser} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/profile\"\r\n            render={props => <Profile {...props} user={this.state} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/home\"\r\n            render={props => (\r\n              <Main\r\n                {...props}\r\n                newsEvents={this.state.newsEvents}\r\n                ready={this.state.ready}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/article-details/:detail\"\r\n            render={props => (\r\n              <ArticleDetails\r\n                {...props}\r\n                newsEvents={this.state.newsEvents}\r\n                ready={this.state.ready}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/upload-image\"\r\n            render={props => (\r\n              <imageUpload\r\n                {...props}\r\n                newsEvents={this.state.newsEvents}\r\n                ready={this.state.ready}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/User_Feed\"\r\n            render={props => (\r\n              <User_Feed\r\n                {...props}\r\n                user={this.state}\r\n                newsEvents={this.state.newsEvents}\r\n                ready={this.state.ready}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}